server:
  port: 0

spring:
  application:
    name: newsletter-service

  datasource:
    url: jdbc:mysql://mysql2:3306/newsletter_schema?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  sql:
    init:
      mode: always # 필요없으면 never로 설정

  jpa:
    hibernate:
      ddl-auto: create
    defer-datasource-initialization: true
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 50
          default_batch_fetch_size: 100
        order_inserts: true
        order_updates: true

  mail:
    host: ${MAIL_HOST}
    port: ${MAIL_PORT}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  thymeleaf:
    enabled: true
    cache: false
    prefix: classpath:/templates/
    suffix: .html
    encoding: UTF-8
    mode: HTML

  data:
    redis:
      host: ${EC2_HOST}
      port: ${REDIS_PORT}
      timeout: 5000

  cloud:
    openfeign:
      client:
        config:
          default:
            connectTimeout: 2000
            readTimeout: 3000
            loggerLevel: basic

    discovery:
      enabled: true
    loadbalancer:
      ribbon:
        enabled: false



springdoc:
  api-docs:
    version: openapi_3_0
    enabled: true
    path: /v3/api-docs
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui:
    enabled: true
    path: /swagger-ui.html

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: always


logging:
  level:
    org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor: DEBUG
    com.sejong.newsletterservice.infrastructure.email: DEBUG

google:
  credentials:
    path: ${GOOGLE_APPLICATION_CREDENTIALS:/app/credentials.json}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_DEFAULTZONE}
    register-with-eureka: true
    fetch-registry: true

resilience4j:
  circuitbreaker:
    instances:
      myFeignClient:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s

  timelimiter:
    instances:
      myFeignClient:
        timeoutDuration: 3s